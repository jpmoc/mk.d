_EKSCTL_NODEGROUP_MK_VERSION= $(_EKSCTL_MK_VERSION)

ECL_NODEGROUP_ADDONS_ALBINGRESSACCESS_FLAG?= false
ECL_NODEGROUP_ADDONS_APPMESHACCESS_FLAG?= false
ECL_NODEGROUP_ADDONS_ASGACCESS_FLAG?= false
ECL_NODEGROUP_ADDONS_EXTERNALDNSACCESS_FLAG?= false
ECL_NODEGROUP_ADDONS_FULLECRACCESS_FLAG?= false
# ECL_NODEGROUP_AMI?= auto-ssm
ECL_NODEGROUP_AMI_FAMILY?= AmazonLinux2
# ECL_NODEGROUP_AMI_NAME?= AmazonLinux2/1.13
# ECL_NODEGROUP_API_VERSION?= 1.13
# ECL_NODEGROUP_AWSPROFILE_NAME?=
# ECL_NODEGROUP_AWSREGION_ID?= us-west-2
# ECL_NODEGROUP_CLUSTER_NAME?= my-cluster
ECL_NODEGROUP_INSTANCECOUNT?= 2
# ECL_NODEGROUP_INSTANCECOUNT_MIN?= 2
# ECL_NODEGROUP_INSTANCECOUNT_MAX?= 2
# ECL_NODEGROUP_INSTANCEPROFILE_ARN?= 2
ECL_NODEGROUP_INSTANCETYPE?= m5.large
# ECL_NODEGROUP_LABELS?= partition=backend,nodeclass=hugememory
# ECL_NODEGROUP_LAYER_NAME?= eksctl-eks1-nodegroup-ng-0
# ECL_NODEGROUP_MAXPOD_COUNT?= 10
# ECL_NODEGROUP_NAME?= ng-8c9962de
# ECL_NODEGROUP_OUTPUT_FORMAT?= table
# ECL_NODEGROUP_PRIVATENETWORKING?=
# ECL_NODEGROUP_ROLE_ARN?= arn:aws:iam::123456789012:role/eksctl-orange-eks-cluster-ServiceRole-1HMW49A7YRUKZ
# ECL_NODEGROUP_SECURITYGROUPS?=
ECL_NODEGROUP_SSHACCESS_FLAG?= false
# ECL_NODEGROUP_SSHPUBLICKEY_DIRPATH?= ./in/
# ECL_NODEGROUP_SSHPUBLICKEY_FILENAME?= id_rsa.pub
# ECL_NODEGROUP_SSHPUBLICKEY_FILEPATH?= $(HOME)/.ssh/id_rsa.pub
# ECL_NODEGROUP_STACK_PREFIX?= eksctl-eks1
# ECL_NODEGROUP_TAGS_KEYVALUES?= environment=staging
ECL_NODEGROUP_TIMEOUT?= 20m0s
# ECL_NODEGROUP_VOLUME_SIZE?= 20
ECL_NODEGROUP_VOLUME_TYPE?= gp2
# ECL_NODEGROUP_ZONES?= us-west-2a ...
# ECL_NODEGROUPS_NAMES?= my-nodegroup ...
# ECL_NODEGROUPS_SET_NAME?= my-nodegroups-set

# Derived parameters
ECL_NODEGROUP_ADDONS_ALBINGRESSACCESS_FLAG?= $(ECL_CLUSTER_ADDONS_ALBINGRESSACCESS_FLAG)
ECL_NODEGROUP_ADDONS_APPMESHACCESS_FLAG?= $(ECL_CLUSTER_ADDONS_APPMESHACCESS_FLAG)
ECL_NODEGROUP_ADDONS_ASGACCESS_FLAG?= $(ECL_CLUSTER_ADDONS_ASGACCESS_FLAG)
ECL_NODEGROUP_ADDONS_EXTERNALDNSACCESS_FLAG?= $(ECL_CLUSTER_ADDONS_EXTERNALDNSACCESS_FLAG)
ECL_NODEGROUP_ADDONS_FULLECRACCESS_FLAG?= $(ECL_CLUSTER_ADDONS_FULLECRACCESS_FLAG)
ECL_NODEGROUP_AMI_FAMILY?= $(ECL_CLUSTER_NODEGROUPS_AMIFAMILY)
ECL_NODEGROUP_AMI_NAME?= $(ECL_NODEGROUP_AMI_FAMILY)/$(ECL_NODEGROUP_API_VERSION)
ECL_NODEGROUP_API_VERSION?= $(ECL_API_VERSION)
ECL_NODEGROUP_AWSPROFILE_NAME?= $(ECL_AWSPROFILE_NAME)
ECL_NODEGROUP_AWSREGION_ID?= $(ECL_AWSREGION_ID)
ECL_NODEGROUP_CLUSTER_NAME?= $(ECL_CLUSTER_NAME)
ECL_NODEGROUP_INSTANCECOUNT_MIN?= $(ECL_NODEGROUP_INSTANCECOUNT)
ECL_NODEGROUP_INSTANCECOUNT_MAX?= $(ECL_NODEGROUP_INSTANCECOUNT)
ECL_NODEGROUP_LAYER_NAME?= eksctl-$(ECL_NODEGROUP_CLUSTER_NAME)-nodegroup-$(ECL_NODEGROUP_NAME)
ECL_NODEGROUP_OUTPUT_FORMAT?= $(ECL_OUTPUT_FORMAT)
ECL_NODEGROUP_SSHPUBLICKEY_DIRPATH?= $(ECL_INPUTS_DIRPATH)
ECL_NODEGROUP_SSHPUBLICKEY_FILEPATH?= $(ECL_NODEGROUP_SSHPUBLICKEY_DIRPATH)$(ECL_NODEGROUP_SSHPUBLICKEY_FILENAME)
ECL_NODEGROUP_STACK_PREFIX?= $(ECL_CLUSTER_STACK_PREFIX)
ECL_NODEGROUPS_AWSREGION_ID?= $(ECL_NODEGROUP_AWSREGION_ID)

# Option parameters
__ECL_ALB_INGRESS_ACCESS__NODEGROUP= $(if $(filter true, $(ECL_NODEGROUP_ADDONS_ALBINGRESSACCESS_FLAG)),--alb-ingress-access)
__ECL_APPMESH_ACCESS__NODEGROUP= $(if $(filter true, $(ECL_NODEGROUP_ADDONS_APPMESHACCESS_FLAG)),--appmesh-access)
__ECL_ASG_ACCESS__NODEGROUP= $(if $(filter true, $(ECL_NODEGROUP_ADDONS_ASGACCESS_FLAG)),--asg-access)
__ECL_CFN_ROLE_ARN__NODEGROUP=
__ECL_CLUSTER__NODEGROUP= $(if $(ECL_NODEGROUP_CLUSTER_NAME),--cluster $(ECL_NODEGROUP_CLUSTER_NAME))
__ECL_DRAIN= $(if $(filter true, $(ECL_NODEGROUP_DRAIN_FLAG)),--drain )
__ECL_FULL_ECR_ACCESS= $(if $(filter true, $(ECL_NODEGROUP_ADDONS_FULLECRACCESS_FLAG)),--full-ecr-access)
__ECL_EXTERNAL_DNS_ACCESS= $(if $(filter true, $(ECL_NODEGROUP_ADDONS_EXTERNALDNSACCESS_FLAG)),--external-dns-access)
__ECL_MAX_PODS_PER_NODE= $(if $(ECL_NODEGROUP_MAXPOD_COUNT),--max-pods-per-node $(ECL_NODEGROUP_MAXPOD_COUNT))
__ECL_NAME__NODEGROUP= $(if $(ECL_NODEGROUP_NAME),--name $(ECL_NODEGROUP_NAME))
__ECL_NODE_AMI__NODEGROUP= $(if $(ECL_NODEGROUP_AMI),--node-ami $(ECL_NODEGROUP_AMI))
__ECL_NODE_AMI_FAMILY__NODEGROUP= $(if $(ECL_NODEGROUP_AMIFAMILY),--node-ami-family $(ECL_NODEGROUP_AMIFAMILY))
__ECL_NODE_LABELS__NODEGROUP= $(if $(ECL_NODEGROUP_LABELS),--node-labels $(ECL_NODEGROUP_LABELS))
__ECL_NODE_PRIVATE_NETWORKING= $(if $(ECL_NODEGROUP_PRIVATENETWORKING),--node-private-networking $(ECL_NODEGROUP_PRIVATENETWORKING))
__ECL_NODE_SECURITY_GROUPS= $(if $(ECL_NODEGROUP_SECURITYGROUPS),--node-security-groups $(ECL_NODEGROUP_SECURITYGROUPS))
__ECL_NODE_TYPE= $(if $(ECL_NODEGROUP_INSTANCETYPE),--node-type=$(ECL_NODEGROUP_INSTANCETYPE))
__ECL_NODE_VOLUME_SIZE= $(if $(ECL_NODEGROUP_VOLUME_SIZE),--node-volume-size=$(ECL_NODEGROUP_VOLUME_SIZE))
__ECL_NODE_VOLUME_TYPE= $(if $(ECL_NODEGROUP_VOLUME_TYPE),--node-volume-type=$(ECL_NODEGROUP_VOLUME_TYPE))
__ECL_NODES= $(if $(ECL_NODEGROUP_INSTANCECOUNT),--nodes=$(ECL_NODEGROUP_INSTANCECOUNT))
__ECL_NODES_MAX= $(if $(ECL_NODEGROUP_INSTANCECOUNT_MAX),--nodes-max=$(ECL_NODEGROUP_INSTANCECOUNT_MAX))
__ECL_NODES_MIN= $(if $(ECL_NODEGROUP_INSTANCECOUNT_MIN),--nodes-min=$(ECL_NODEGROUP_INSTANCECOUNT_MIN))
__ECL_PROFILE__NODEGROUP= $(if $(ECL_NODEGROUP_AWSPROFILE_NAME),--profile $(ECL_NODEGROUP_AWSPROFILE_NAME))
__ECL_REGION__NODEGROUP= $(if $(ECL_NODEGROUP_AWSREGION_ID),--region=$(ECL_NODEGROUP_AWSREGION_ID))
__ECL_SSH_ACCESS= $(if $(filter true, $(ECL_NODEGROUP_SSHACCESS_FLAG)),--ssh-access) #--no-ssh-access
__ECL_SSH_PUBLIC_KEY= $(if $(filter true, $(ECL_NODEGROUP_SSHPUBLICKEY_FILEPATH)),--ssh-public-key=$(ECL_NODEGROUP_SSHPUBLICKEY_FILEPATH))
__ECL_TIMEOUT= $(if $(ECL_NODEGROUP_TIMEOUT),--timeout $(ECL_NODEGROUP_TIMEOUT))
__ECL_VERSION= $(if $(ECL_NODEGROUP_API_VERSION),--version $(ECL_NODEGROUP_API_VERSION))
__ECL_ZONES= $(if $(ECL_NODEGROUP_ZONES),--zones=$(subst $(SPACE),$(COMMA),$(ECL_NODEGROUP_ZONES)))

# UI parameters

#--- Utilities

#--- Macros

#----------------------------------------------------------------------
# USAGE
#

_ecl_view_framework_macros ::
	@echo 'EksCtL::Nodegroup ($(_EKSCTL_NODEGROUP_MK_VERSION)) macros:'
	@echo

_ecl_view_framework_parameters ::
	@echo 'EksCtL::Nodegroup ($(_EKSCTL_NODEGROUP_MK_VERSION)) parameters:'
	@echo '    ECL_NODEGROUP_ADDONS_ALBINGRESSACCESS_FLAG=$(ECL_NODEGROUP_ADDONS_ALBINGRESSACCESS_FLAG)'
	@echo '    ECL_NODEGROUP_ADDONS_APPMESHACCESS_FLAG=$(ECL_NODEGROUP_ADDONS_APPMESHACCESS_FLAG)'
	@echo '    ECL_NODEGROUP_ADDONS_ASGACCESS_FLAG=$(ECL_NODEGROUP_ADDONS_ASGACCESS_FLAG)'
	@echo '    ECL_NODEGROUP_ADDONS_EXTERNALDNSACCESS_FLAG=$(ECL_NODEGROUP_ADDONS_EXTERNALDNSACCESS_FLAG)'
	@echo '    ECL_NODEGROUP_ADDONS_FULLECRACCESS_FLAG=$(ECL_NODEGROUP_ADDONS_FULLECRACCESS_FLAG)'
	@echo '    ECL_NODEGROUP_AMI=$(ECL_NODEGROUP_AMI)'
	@echo '    ECL_NODEGROUP_AMI_FAMILY=$(ECL_NODEGROUP_AMI_FAMILY)'
	@echo '    ECL_NODEGROUP_AMI_NAME=$(ECL_NODEGROUP_AMI_NAME)'
	@echo '    ECL_NODEGROUP_API_VERSION=$(ECL_NODEGROUP_API_VERSION)'
	@echo '    ECL_NODEGROUP_AWSPROFILE_NAME=$(ECL_NODEGROUP_AWSPROFILE_NAME)'
	@echo '    ECL_NODEGROUP_AWSREGION_ID=$(ECL_NODEGROUP_AWSREGION_ID)'
	@echo '    ECL_NODEGROUP_CLUSTER_NAME=$(ECL_NODEGROUP_CLUSTER_NAME)'
	@echo '    ECL_NODEGROUP_INSTANCECOUNT=$(ECL_NODEGROUP_INSTANCECOUNT)'
	@echo '    ECL_NODEGROUP_INSTANCECOUNT_MAX=$(ECL_NODEGROUP_INSTANCECOUNT_MAX)'
	@echo '    ECL_NODEGROUP_INSTANCECOUNT_MIN=$(ECL_NODEGROUP_INSTANCECOUNT_MIN)'
	@echo '    ECL_NODEGROUP_INSTANCEPROFILE_ARN=$(ECL_NODEGROUP_INSTANCEPROFILE_ARN)'
	@echo '    ECL_NODEGROUP_INSTANCETYPE=$(ECL_NODEGROUP_INSTANCETYPE)'
	@echo '    ECL_NODEGROUP_LABELS=$(ECL_NODEGROUP_LABELS)'
	@echo '    ECL_NODEGROUP_LAYER_NAME=$(ECL_NODEGROUP_LAYER_NAME)'
	@echo '    ECL_NODEGROUP_MAXPOD_COUNT=$(ECL_NODEGROUP_MAXPOD_COUNT)'
	@echo '    ECL_NODEGROUP_NAME=$(ECL_NODEGROUP_NAME)'
	@echo '    ECL_NODEGROUP_OUTPUT_FORMAT=$(ECL_NODEGROUP_OUTPUT_FORMAT)'
	@echo '    ECL_NODEGROUP_PRIVATENETWORKING=$(ECL_NODEGROUP_PRIVATENETWORKING)'
	@echo '    ECL_NODEGROUP_ROLE_ARN=$(ECL_NODEGROUP_ROLE_ARN)'
	@echo '    ECL_NODEGROUP_SECURITYGROUPS=$(ECL_NODEGROUP_SECURITYGROUPS)'
	@echo '    ECL_NODEGROUP_SSHACCESS_FLAG=$(ECL_NODEGROUP_SSHACCESS_FLAG)'
	@echo '    ECL_NODEGROUP_SSHPUBLICKEY_DIRPATH=$(ECL_NODEGROUP_SSHPUBLICKEY_DIRPATH)'
	@echo '    ECL_NODEGROUP_SSHPUBLICKEY_FILENAME=$(ECL_NODEGROUP_SSHPUBLICKEY_FILENAME)'
	@echo '    ECL_NODEGROUP_SSHPUBLICKEY_FILEPATH=$(ECL_NODEGROUP_SSHPUBLICKEY_FILEPATH)'
	@echo '    ECL_NODEGROUP_STACK_PREFIX=$(ECL_NODEGROUP_STACK_PREFIX)'
	@echo '    ECL_NODEGROUP_VOLUME_SIZE=$(ECL_NODEGROUP_VOLUME_SIZE)'
	@echo '    ECL_NODEGROUP_VOLUME_TYPE=$(ECL_NODEGROUP_VOLUME_TYPE)'
	@echo '    ECL_NODEGROUP_ZONES=$(ECL_NODEGROUP_ZONES)'
	@echo '    ECL_NODEGROUPS_NAMES=$(ECL_NODEGROUPS_NAMES)'
	@echo '    ECL_NODEGROUPS_SET_NAME=$(ECL_NODEGROUPS_SET_NAME)'
	@echo

_ecl_view_framework_targets ::
	@echo 'EksCtL::Nodegroup ($(_EKSCTL_NODEGROUP_MK_VERSION)) targets:'
	@echo '    _ecl_create_nodegroup               - Create a new node-group'
	@echo '    _ecl_delete_nodegroup               - Delete a node-group'
	@echo '    _ecl_show_nodegroup                 - Show everything related to a node-group'
	@echo '    _ecl_show_nodegroup_cluster         - Show cluster of a node-group'
	@echo '    _ecl_show_nodegroup_description     - Show description of a node-group'
	@echo '    _ecl_show_nodegroup_stacks          - Show stacks attached to a node-group'
	@echo '    _ecl_view_nodegroups                - View node-groups'
	@echo '    _ecl_view_nodegroupset              - View a set of node-groups'
	@echo

#----------------------------------------------------------------------
# PUBLIC TARGETS
#

_ecl_create_nodegroup:
	@$(INFO) '$(ECL_UI_LABEL)Creating node-group "$(ECL_NODEGROUP_NAME)" ...'; $(NORMAL)
	@$(WARN) 'This operation fails if no EKS control plan has been deployed'; $(NORMAL)
	$(EKSCTL) create nodegroup $(strip $(__ECL_ALB_INGRESS_ACCESS) $(__ECL_APPMESH_ACCESS) $(__ECL_ASG_ACCESS) $(__ECL_CFN_ROLE_ARN) $(__ECL_CLUSTER__NODEGROUP) $(__ECL_EXTERNAL_DNS_ACCESS) $(__ECL_FULL_ECR_ACCESS) $(__ECL_MAX_PODS_PER_NODE) $(__ECL_NAME__NODEGROUP) $(__ECL_NODE_AMI__NODEGROUP) $(__ECL_NODE_AMI_FAMILY__NODEGROUP) $(__ECL_NODE_LABELS__NODEGROUP) $(__ECL_NODE_PRIVATE_NETWORKING) $(__ECL_NODE_SECURITY_GROUPS) $(__ECL_NODE_TYPE) $(__ECL_NODE_VOLUME_SIZE) $(__ECL_NODE_VOLUME_TYPE) $(__ECL_NODE_ZONES) $(__ECL_NODES) $(__ECL_NODES_MAX) $(__ECL_NODES_MIN) $(__ECL_PROFILE__NODEGROUP) $(__ECL_REGION__NODEGROUP) $(__ECL_SSH_ACCESS__NODEGROUP) $(__ECL_SSH_PUBLIC_KEY__NODEGROUP) $(__ECL_VERSION__NODEGROUP) $(__ECL_ZONES__NODEGROUP))

_ecl_delete_nodegroup:
	@$(INFO) '$(ECL_UI_LABEL)Deleting node-group "$(ECL_NODEGROUP_NAME)" ...'; $(NORMAL)
	@$(WARN) 'The deletion of a node-group is asynchronous!'; $(NORMAL)
	$(EKSCTL) delete nodegroup $(__ECL_CLUSTER__NODEGROUP) $(__ECL_DRAIN) $(__ECL_NAME__NODEGROUP) $(__ECL_REGION__NODEGROUP) $(__ECL_WAIT__NODEGROUP)

_ecl_show_nodegroup: _ecl_show_nodegroup_cluster _ecl_show_nodegroup_stacks _ecl_show_nodegroup_description

_ecl_show_nodegroup_cluster:
	@$(INFO) '$(ECL_UI_LABEL)Showing cluster of node-group "$(ECL_NODEGROUP_NAME)" ...'; $(NORMAL)
	$(EKSCTL) get nodegroup $(__ECL_NODEGROUP) $(__ECL_OUTPUT__NODEGROUP) $(__ECL_REGION__NODEGROUP)

_ecl_show_nodegroup_description:
	@$(INFO) '$(ECL_UI_LABEL)Showing description of node-group "$(ECL_NODEGROUP_NAME)" ...'; $(NORMAL)
	$(EKSCTL) get nodegroup $(__ECL_NAME__NODEGROUP) $(__ECL_REGION__NODEGROUP)

_ecl_show_nodegroup_stacks:
	@$(INFO) '$(ECL_UI_LABEL)Showing cloudformation stacks of node-group "$(ECL_NODEGROUP_NAME)" ...'; $(NORMAL)
	@$(WARN) 'This operation returns a stack for the control plan and one for each nodegroup'; $(NORMAL)
	$(EKSCTL) utils describe-stacks $(__ECL_NAME__NODEGROUP) $(__ECL_REGION__NODEGROUP)

_ecl_view_nodegroups:
	@$(INFO) '$(ECL_UI_LABEL)Viewing ALL node-groups ...'; $(NORMAL)
	@$(WARN) 'This operation returns information extracted from the control plan stacks'; $(NORMAL)
	$(EKSCTL) get nodegroups

_ecl_view_nodegroups_set:
	@$(INFO) '$(ECL_UI_LABEL)Viewing node-groups-set "$(ECL_NODEGROUPS_SET_NAME)" ...'; $(NORMAL)
	@$(foreach N,$(ECL_NODEGROUPS_NAMES), $(EKSCTL) get nodegroup --name $(N) --region $(ECL_NODEGROUPS_AWS_REGION); )
