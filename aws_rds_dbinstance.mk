_AWS_RDS_DBINSTANCE_MK_VERSION= $(_AWS_RDS_MK_VERSION)

# RDS_DBINSTANCE_ALLOCATED_STORAGE?= 200
# RDS_DBINSTANCE_AVAILABILITY_ZONE?= us-west-2b
# RDS_DBINSTANCE_BACKUP_RETENTION?= 7
# RDS_DBINSTANCE_BACKUP_WINDOW?= 09:05-09:35
# RDS_DBINSTANCE_CHARACTERSET_NAME?=
# RDS_DBINSTANCE_CLASS?= db.m3.medium
# RDS_DBINSTANCE_DATABASE_ENGINE?= postgres
# RDS_DBINSTANCE_DATABASE_NAME?= snaplogicps
# RDS_DBINSTANCE_DATABASE_PORT?= 5432
# RDS_DBINSTANCE_DATABASE_VERSION?= 9.6.6
# RDS_DBINSTANCE_DBCLUSTER_IDENTIFIER?= my-cluster-identifier
# RDS_DBINSTANCE_DBSECURITYGROUP_NAMES?= my-db-security-group
# RDS_DBINSTANCE_DBSUBNETGROUP_NAME?= my-subnet-group
# RDS_DBINSTANCE_ENDPOINT?= postgressdemo.ctt3sfhmsgkw.us-west-2.rds.amazonaws.com
# RDS_DBINSTANCE_FINALSNAPSHOT_IDENTIFIER?= my-snapshot-identifier
RDS_DBINSTANCE_FINALSNAPSHOT_SKIP?= false
# RDS_DBINSTANCE_IDENTIFIER?= postgressdemo
# RDS_DBINSTANCE_IDENTIFIERS?=
# RDS_DBINSTANCE_IOPS?=
# RDS_DBINSTANCE_KEYKMS_ID?=
# RDS_DBINSTANCE_LICENSE_MODEL?= postgresql-license
# RDS_DBINSTANCE_MAINTENANCE_WINDOW?= sat:06:15-sat:06:45
# RDS_DBINSTANCE_MASTER_USERNAME?= snaplogicpsql
# RDS_DBINSTANCE_MASTER_PASSWORD?= snaplogicpsql
# RDS_DBINSTANCE_MINOR_UPGRADE?= true
# RDS_DBINSTANCE_MONITORING_INTERVAL?= 0
# RDS_DBINSTANCE_MONITORING_ROLEARN?= arn:aws:iam:123456789012:role/emaccess
# RDS_DBINSTANCE_MULTI_AZ?= true
# RDS_DBINSTANCE_PROMOTION_TIER?= 1
# RDS_DBINSTANCE_PUBLICLY_ACCESSIBLE?= true
# RDS_DBINSTANCE_SECURITYGROUP_IDS?=
# RDS_DBINSTANCE_STORAGE_ENCRYPTED?= false
# RDS_DBINSTANCE_STORAGE_TYPE?= gp2
# RDS_DBINSTANCE_TAG_SNAPSHOT?= false
# RDS_DBINSTANCE_TAGS?= Key=string,Value=string ...
# RDS_DBINSTANCE_TIMEZONE?=

# Derived variables
RDS_DBINSTANCE_DBCLUSTER_IDENTIFIER?= $(RDS_DBCLUSTER_IDENTIFIER)
RDS_DBINSTANCE_DBSECURITYGROUP_NAMES?= $(RDS_DBSECURITYGROUP_NAMES)
RDS_DBINSTANCE_DBSUBNETGROUP_NAME?= $(RDS_DBSUBNETGROUP_NAME)
RDS_DBINSTANCE_IDENTIFIERS?= $(RDS_DBINSTANCE_IDENTIFIER)

# Options variables
__RDS_ALLOCATED_STORAGE= $(if $(RDS_DBINSTANCE_ALLOCATED_STORAGE), --allocated-storage $(RDS_DBINSTANCE_ALLOCATED_STORAGE))
__RDS_AUTO_MINOR_VERSION_UPGRADE= $(if $(filter true, $(RDS_DBINSTANCE_MINOR_UPGRADE)), --auto-minor-version-upgrade, --no-auto-minor-version-upgrade)
__RDS_AVAILABILITY_ZONE= $(if $(RDS_DBINSTANCE_AVAILABILITY_ZONE), --availability-zone $(RDS_DBINSTANCE_AVAILABILITY_ZONE))
__RDS_BACKUP_RETENTION_PERIOD_INSTANCE= $(if $(RDS_DBINSTANCE_BACKUP_RETENTION), --backup-retention-period $(RDS_DBINSTANCE_BACKUP_RETENTION))
__RDS_CHARACTER_SET_NAME_INSTANCE= $(if $(RDS_DBINSTANCE_CHARACTERSET_NAME), --character-set-name $(RDS_DBINSTANCE_CHARACTERSET_NAME))
__RDS_COPY_TAGS_TO_SNAPSHOT= $(if $(filter true, $(RDS_DBINSTANCE_TAG_SNAPSHOT)), --copy-tags-to-snapshot, --no-copy-tags-to-snapshot)
__RDS_DB_CLUSTER_IDENTIFIER_INSTANCE= $(if $(RDS_DBINSTANCE_DBCLUSTER_IDENTIFIER), --db-cluster-identifier $(RDS_DBINSTANCE_DBCLUSTER_IDENTIFIER))
__RDS_DB_INSTANCE_CLASS= $(if $(RDS_DBINSTANCE_CLASS), --db-instance-class $(RDS_DBINSTANCE_CLASS))
__RDS_DB_INSTANCE_IDENTIFIER= $(if $(RDS_DBINSTANCE_IDENTIFIER), --db-instance-identifier $(RDS_DBINSTANCE_IDENTIFIER))
__RDS_DB_NAME_INSTANCE= $(if $(RDS_DBINSTANCE_DATABASE_NAME), --db-name $(RDS_DBINSTANCE_DATABASE_NAME))
__RDS_DB_SECURITY_GROUPS= $(if $(RDS_DBINSTANCE_DBSECURITYGROUP_NAMES), --db-security-groups $(RDS_DBINSTANCE_DBSECURITYGROUP_NAMES))
__RDS_DB_SUBNET_GROUP_NAME_INSTANCE= $(if $(RDS_DBINSTANCE_DBSUBNETGROUP_NAME), --db-subnet-group-name $(RDS_DBINSTANCE_DBSUBNETGROUP_NAME))
__RDS_DOMAIN=
__RDS_DOMAIN_IAM_ROLE=
__RDS_ENABLE_CLOUDWATCH_LOGS_EXPORT=
__RDS_ENABLE_IAM_DATABASE_AUTHENTICATION=
__RDS_ENABLE_PERFORMANCE_INSIGHTS=
__RDS_ENGINE_INSTANCE= $(if $(RDS_DBINSTANCE_DATABASE_ENGINE), --engine $(RDS_DBINSTANCE_DATABASE_ENGINE))
__RDS_ENGINE_VERSION_INSTANCE= $(if $(RDS_DBINSTANCE_DATABASE_VERSION), --engine-version $(RDS_DBINSTANCE_DATABASE_VERSION))
__RDS_FINAL_DB_SNAPSHOT_IDENTIFIER= $(if $(RDS_DBINSTANCE_FINALSNAPSHOT_IDENTIFIER), --final-db-snapshot-identifier $(RDS_DBINSTANCE_FINALSNAPSHOT_IDENTIFIER))
__RDS_IOPS= $(if $(RDS_DBINSTANCE_IOPS), --iops $(RDS_DBINSTANCE_IOPS))
__RDS_KMS_KEY_ID_INSTANCE= $(if $(RDS_DBINSTANCE_KMSKEY_ID), --kms-key-id $(RDS_DBINSTANCE_KMSKEY_ID))
__RDS_LICENSE_MODEL= $(if $(RDS_DBINSTANCE_LICENCE_MODEL), --license-model $(RDS_DBINSTANCE_LICENSE_MODEL))
__RDS_MASTER_USER_PASSWORD_INSTANCE= $(if $(RDS_DBINSTANCE_MASTER_PASSWORD), --master-user-password $(RDS_DBINSTANCE_MASTER_PASSWORD))
__RDS_MASTER_USERNAME_INSTANCE= $(if $(RDS_DBINSTANCE_MASTER_USERNAME), --master-username $(RDS_DBINSTANCE_MASTER_USERNAME))
__RDS_MONITORING_INTERVAL= $(if $(RDS_DBINSTANCE_MONITORING_INTERVAL), --monitoring-interval $(RDS_DBINSTANCE_MONITORING_INTERVAL))
__RDS_MONITORING_ROLE_ARN= $(if $(RDS_DBINSTANCE_MONITORING_ROLEARN), --monitoring-role-arn $(RDS_DBINSTANCE_MONITORING_ROLEARN))
__RDS_MULTI_AZ= $(if $(filter true, $(RDS_DBINSTANCE_MULTI_AZ)), --multi-az, --no-multi-az)
__RDS_OPTION_GROUP_NAME=
__RDS_PERFORMANCE_INSIGHTS_KMS_KEY=
__RDS_PORT_INSTANCE= $(if $(RDS_DBINSTANCE_DATABASE_PORT), --port $(RDS_DBINSTANCE_DATABASE_PORT))
__RDS_PREFERRED_BACKUP_WINDOW_INSTANCE= $(if $(RDS_DBINSTANCE_BACKUP_WINDOW), --preferred-backup-window $(RDS_DBINSTANCE_BACKUP_WINDOW))
__RDS_PREFERRED_MAINTENANCE_WINDOW_INSTANCE= $(if $(RDS_DBINSTANCE_MAINTENANCE_WINDOW), --preferred-maintenance-window $(RDS_DBINSTANCE_MAINTENANCE_WINDOW))
__RDS_PROMOTION_TIER= $(if $(RDS_DBINSTANCE_PROMOTION_TIER), --promotion-tier $(RDS_DBINSTANCE_PROMOTION_TIER))
__RDS_PUBLICLY_ACCESSIBLE= $(if $(filter true, $(RDS_DBINSTANCE_PUBLICLY_ACCESSIBLE)), --publicly-accessible, --no-publicly-accessible)
__RDS_SKIP_FINAL_SNAPSHOT_INSTANCE= $(if $(filter true, $(RDS_DBINSTANCE_FINALSNAPSHOT_SKIP)), --skip-final-snapshot, --no-skip-final-snapshot)
__RDS_STORAGE_ENCRYPTED_INSTANCE= $(if $(filter true, $(RDS_DBINSTANCE_STORAGE_ENCRYPTED)), --storage-encrypted, --no-storage-encrypted)
__RDS_STORAGE_TYPE= $(if $(RDS_DBINSTANCE_STORAGE_TYPE), --storage-type $(RDS_DBINSTANCE_STORAGE_TYPE))
__RDS_TAGS_INSTANCE= $(if $(RDS_DBINSTANCE_TAGS), --tags $(RDS_DBINSTANCE_TAGS))
__RDS_TIMEZONE=
__RDS_VPC_SECURITY_GROUP_IDS_DBINSTANCE=

# UI variables
RDS_UI_VIEW_DBINSTANCES_FIELDS?= .{DBInstanceIdentifier:DBInstanceIdentifier,engine:Engine,engineVersion:EngineVersion,multiAZ:MultiAZ,dbInstanceClass:DBInstanceClass,availabilityZone:AvailabilityZone,dbInstanceStatus:DBInstanceStatus}

#--- Utilities

#--- MACROS
_rds_get_dbinstance_endpoint= $(call _rds_get_dbinstance_endpoint_I, $(RDS_DBINSTANCE_IDENTIFIER))
_rds_get_dbinstance_endpoint_I= $(shell $(AWS) rds describe-db-instances --filters Name=db-instance-id,Values=$(strip $(1)) --query "DBInstances[0].Endpoint.Address"  --output text)

_rds_get_dbinstance_securitygroup_ids= $(call _rds_get_dbinstance_securitygroup_ids_I, $(RDS_DBINSTANCE_IDENTIFIER))
_rds_get_dbinstance_securitygroup_ids_I= $(shell $(AWS) rds describe-db-instances --filters Name=db-instance-id,Values=$(strip $(1)) --query "DBInstances[].VpcSecurityGroups[].VpcSecurityGroupId" --output text)

#----------------------------------------------------------------------
# USAGE
#

_rds_view_makefile_macros ::
	@echo 'AWS::RDS::DbInstance ($(_AWS_RDS_DBINSTANCE_MK_VERSION)) macros:'
	@echo '    _rds_get_dbinstance_entrypoint_{|I}           - Get the entrypoint of a DB-instance'
	@echo '    _rds_get_dbinstance_securitygroup_ids_{|I}    - Get the security-group IDs of a DB-instance'
	@echo

_rds_view_makefile_targets ::
	@echo 'AWS::RDS::DbInstance ($(_AWS_RDS_DBINSTANCE_MK_VERSION)) targets:'
	@echo '    _rds_create_dbinstance                        - Create a db instance'
	@echo '    _rds_delete_dbinstance                        - Delete a db instance'
	@echo '    _rds_show_dbinstance                          - Show db instance'
	@echo '    _rds_view_dbinstances                         - View db instances'
	@echo '    _rds_view_dbinstances_set                     - View a set of db instances'
	@echo

_rds_view_makefile_variables ::
	@echo 'AWS::RDS::DbInstance ($(_AWS_RDS_DBINSTANCE_MK_VERSION)) variables:'
	@echo '    RDS_DBINSTANCE_ALLOCATED_STORAGE=$(RDS_DBINSTANCE_ALLOCATED_STORAGE)'
	@echo '    RDS_DBINSTANCE_AVAILABILITY_ZONE=$(RDS_DBINSTANCE_AVAILABILITY_ZONE)'
	@echo '    RDS_DBINSTANCE_BACKUP_RETENTION=$(RDS_DBINSTANCE_BACKUP_RETENTION)'
	@echo '    RDS_DBINSTANCE_BACKUP_WINDOW=$(RDS_DBINSTANCE_BACKUP_WINDOW)'
	@echo '    RDS_DBINSTANCE_CLASS=$(RDS_DBINSTANCE_CLASS)'
	@echo '    RDS_DBINSTANCE_DATABASE_ENGINE=$(RDS_DBINSTANCE_DATABASE_ENGINE)'
	@echo '    RDS_DBINSTANCE_DATABASE_NAME=$(RDS_DBINSTANCE_DATABASE_NAME)'
	@echo '    RDS_DBINSTANCE_DATABASE_PORT=$(RDS_DBINSTANCE_DATABASE_PORT)'
	@echo '    RDS_DBINSTANCE_DATABASE_VERSION=$(RDS_DBINSTANCE_DATABASE_VERSION)'
	@echo '    RDS_DBINSTANCE_DBSECURITYGROUP_NAMES=$(RDS_DBINSTANCE_DBSECURITYGROUP_NAMES)'
	@echo '    RDS_DBINSTANCE_DBSUBNETGROUP_NAME?=$(RDS_DBINSTANCE_DBSUBNETGROUP_NAME)'
	@echo '    RDS_DBINSTANCE_ENDPOINT=$(RDS_DBINSTANCE_ENDPOINT)'
	@echo '    RDS_DBINSTANCE_FINALSNAPSHOT_IDENTIFIER=$(RDS_DBINSTANCE_FINALSNAPSHOT_IDENTIFIER)'
	@echo '    RDS_DBINSTANCE_FINALSNAPSHOT_SKIP=$(RDS_DBINSTANCE_FINALSNAPSHOT_SKIP)'
	@echo '    RDS_DBINSTANCE_IDENTIFIER=$(RDS_DBINSTANCE_IDENTIFIER)'
	@echo '    RDS_DBINSTANCE_IDENTIFIERS=$(RDS_DBINSTANCE_IDENTIFIERS)'
	@echo '    RDS_DBINSTANCE_IOPS=$(RDS_DBINSTANCE_IOPS)'
	@echo '    RDS_DBINSTANCE_KMSKEY_ID=$(RDS_DBINSTANCE_KMSKEY_ID)'
	@echo '    RDS_DBINSTANCE_LICENSE_MODEL=$(RDS_DBINSTANCE_LICENSE_MODEL)'
	@echo '    RDS_DBINSTANCE_MAINTENANCE_WINDOW?=$(RDS_DBINSTANCE_MAINTENANCE_WINDOW)'
	@echo '    RDS_DBINSTANCE_MASTER_USERNAME?=$(RDS_DBINSTANCE_MASTER_USERNAME)'
	@echo '    RDS_DBINSTANCE_MASTER_PASSWORD?=$(RDS_DBINSTANCE_MASTER_PASSWORD)'
	@echo '    RDS_DBINSTANCE_MINOR_UPGRADE?=$(RDS_DBINSTANCE_MINOR_UPGRADE)'
	@echo '    RDS_DBINSTANCE_MONITORING_INTERVAL?=$(RDS_DBINSTANCE_MONITORING_INTERVAL)'
	@echo '    RDS_DBINSTANCE_MONITORING_ROLEARN?=$(RDS_DBINSTANCE_MONITORING_ROLEARN)'
	@echo '    RDS_DBINSTANCE_MULTI_AZ?=$(RDS_DBINSTANCE_MULTI_AZ)'
	@echo '    RDS_DBINSTANCE_PUBLICLY_ACCESSIBLE?=$(RDS_DBINSTANCE_PUBLICLY_ACCESSIBLE)'
	@echo '    RDS_DBINSTANCE_SECURITYGROUP_IDS?=$(RDS_DBINSTANCE_SECURITYGROUP_IDS)'
	@echo '    RDS_DBINSTANCE_STORAGE_ENCRYPTED?=$(RDS_DBINSTANCE_STORAGE_ENCRYPTED)'
	@echo '    RDS_DBINSTANCE_STORAGE_TYPE?=$(RDS_DBINSTANCE_STORAGE_TYPE)'
	@echo '    RDS_DBINSTANCE_TAG_SNAPSHOT?=$(RDS_DBINSTANCE_TAG_SNAPSHOT)'
	@echo '    RDS_DBINSTANCE_TAGS?=$(RDS_DBINSTANCE_TAGS)'
	@echo '    RDS_DBINSTANCE_TIMEZONE?=$(RDS_DBINSTANCE_TIMEZONE)'
	@echo

#----------------------------------------------------------------------
# PRIVATE TARGETS
#


#----------------------------------------------------------------------
# PUBLIC TARGETS
#


_rds_create_dbinstance:
	@$(INFO) '$(AWS_UI_LABEL)Creating DB instance "$(RDS_DBINSTANCE_IDENTIFIER)"...'; $(NORMAL)
	$(AWS) rds create-db-instance $(__RDS_ALLOCATED_STORAGE) $(__RDS_AUTO_MINOR_VERSION_UPGRADE) $(__RDS_AVAILABILITY_ZONE) $(__RDS_BACKUP_RETENTION_PERIOD_INSTANCE) $(__RDS_CHARACTER_SET_NAME_INSTANCE) $(__RDS_COPY_TAGS_TO_SNAPSHOT) $(__RDS_DB_CLUSTER_IDENTIFIER_INSTANCE) $(__RDS_DB_INSTANCE_CLASS) $(__RDS_DB_INSTANCE_IDENTIFIER) $(__RDS_DB_NAME_INSTANCE) $(__RDS_DB_SECURITY_GROUPS) $(__RDS_DB_SUBNET_GROUP_NAME_INSTANCE) $(__RDS_DOMAIN) $(__RDS_DOMAIN_IAM_ROLE_NAME) $(__RDS_ENABLE_CLOUDWATCH_LOGS_EXPORT) $(__RDS_ENABLE_IAM_DATABASE_AUTHENTICATION) $(__RDS_ENABLE_PERFORMANCE_INSIGHTS) $(__RDS_ENGINE_INSTANCE) $(__RDS_ENGINE_VERSION_INSTANCE) $(__RDS_IOPS) $(__RDS_KMS_KEY_ID_INSTANCE) $(__RDS_LICENSE_MODEL) $(__RDS_MASTER_USER_PASSWORD_INSTANCE) $(__RDS_MASTER_USERNAME_INSTANCE) $(__RDS_MONITORING_INTERVAL) $(__RDS_MONITORING_ROLE_ARN) $(__RDS_MULTI_AZ) $(__RDS_OPTION_GROUP_NAME) $(__RDS_PERFORMANCE_INSIGHTS_KMS_KEY_ID) $(__RDS_PORT_INSTANCE) $(__RDS_PREFERRED_BACKUP_WINDOW_INSTANCE) $(__RDS_PREFERRED_MAINTENANCE_WINDOW_INSTANCE) $(__RDS_PROMOTION_TIER) $(__RDS_PUBLICLY_ACCESSIBLE) $(__RDS_STORAGE_ENCRYPTED_INSTANCE) $(__RDS_STORAGE_TYPE) $(__RDS_TAGS_INSTANCE) $(__RDS_TIMEZONE) $(__RDS_VPC_SECURITY_GROUP_IDS_DBINSTANCE)

_rds_delete_dbinstance:
	@$(INFO) '$(AWS_UI_LABEL)Deleting DB instance "$(RDS_DBINSTANCE_IDENTIFIER)"...'; $(NORMAL)
	$(AWS) rds delete-db-instance $(__RDS_DB_INSTANCE_IDENTIFIER) $(__RDS_FINAL_DB_SNAPSHOT_IDENTIFIER_INSTANCE) $(__RDS_SKIP_FINAL_SNAPSHOT_INSTANCE)

_rds_mysql_dbinstance:
	@$(INFO) '$(AWS_UI_LABEL)Connecting using mysql to DB instance "$(RDS_DBINSTANCE_IDENTIFIER)"...'; $(NORMAL)
	mysql --host=$(RDS_DBINSTANCE_ENDPOINT) --user aurora --port 3306 -p

_rds_show_dbinstance: _rds_show_dbinstance_securitygroups _rds_show_dbinstance_overview

_rds_show_dbinstance_overview:
	@$(INFO) '$(AWS_UI_LABEL)Showing overview of DB instance "$(RDS_DBINSTANCE_IDENTIFIER)" ...'; $(NORMAL)
	$(AWS) rds describe-db-instances --filters Name=db-instance-id,Values=$(RDS_DBINSTANCE_IDENTIFIER) --query "DBInstances[]"

_rds_show_dbinstance_securitygroups:
	@$(INFO) '$(AWS_UI_LABEL)Showing security-groups of DB instance "$(RDS_DBINSTANCE_IDENTIFIER)" ...'; $(NORMAL)
	$(AWS)  rds describe-db-instances --filters Name=db-instance-id,Values=$(RDS_DBINSTANCE_IDENTIFIER) --query "DBInstances[].VpcSecurityGroups[]" 

_rds_view_dbinstances:
	@$(INFO) '$(AWS_UI_LABEL)Viewing DB instances ...'; $(NORMAL)
	$(AWS) rds describe-db-instances $(_X__FILTER) --query "DBInstances[]$(RDS_UI_VIEW_DBINSTANCES_FIELDS)"

_rds_view_dbinstances_set:
