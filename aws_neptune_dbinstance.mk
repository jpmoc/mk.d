_AWS_NEPTUNE_DBINSTANCE_MK_VERSION= $(_AWS_NEPTUNE_MK_VERSION)

# NTE_DBINSTANCE_ALLOCATED_STORAGE?= 200
# NTE_DBINSTANCE_AVAILABILITY_ZONE?= us-west-2b
# NTE_DBINSTANCE_BACKUP_RETENTION?= 7
# NTE_DBINSTANCE_BACKUP_WINDOW?= 09:05-09:35
# NTE_DBINSTANCE_CHARACTERSET_NAME?=
# NTE_DBINSTANCE_CLASS?= db.m3.medium
# NTE_DBINSTANCE_DATABASE_ENGINE?= postgres
# NTE_DBINSTANCE_DATABASE_NAME?= snaplogicps
# NTE_DBINSTANCE_DATABASE_PORT?= 5432
# NTE_DBINSTANCE_DATABASE_VERSION?= 9.6.6
# NTE_DBINSTANCE_DBCLUSTER_IDENTIFIER?= my-cluster-identifier
# NTE_DBINSTANCE_DBSECURITYGROUP_NAMES?= my-db-security-group
# NTE_DBINSTANCE_DBSUBNETGROUP_NAME?= my-subnet-group
# NTE_DBINSTANCE_ENDPOINT?=
# NTE_DBINSTANCE_FINALSNAPSHOT_IDENTIFIER?= my-snapshot-identifier
NTE_DBINSTANCE_FINALSNAPSHOT_SKIP?= false
# NTE_DBINSTANCE_IDENTIFIER?= postgressdemo
# NTE_DBINSTANCE_IDENTIFIERS?=
# NTE_DBINSTANCE_IOPS?=
# NTE_DBINSTANCE_KEYKMS_ID?=
# NTE_DBINSTANCE_LICENSE_MODEL?= postgresql-license
# NTE_DBINSTANCE_MAINTENANCE_WINDOW?= sat:06:15-sat:06:45
# NTE_DBINSTANCE_MASTER_USERNAME?= snaplogicpsql
# NTE_DBINSTANCE_MASTER_PASSWORD?= snaplogicpsql
# NTE_DBINSTANCE_MINOR_UPGRADE?= true
# NTE_DBINSTANCE_MONITORING_INTERVAL?= 0
# NTE_DBINSTANCE_MONITORING_ROLEARN?= arn:aws:iam:123456789012:role/emaccess
# NTE_DBINSTANCE_MULTI_AZ?= true
# NTE_DBINSTANCE_PROMOTION_TIER?= 1
# NTE_DBINSTANCE_PUBLICLY_ACCESSIBLE?= true
# NTE_DBINSTANCE_SECURITYGROUP_IDS?=
# NTE_DBINSTANCE_STORAGE_ENCRYPTED?= false
# NTE_DBINSTANCE_STORAGE_TYPE?= gp2
# NTE_DBINSTANCE_TAG_SNAPSHOT?= false
# NTE_DBINSTANCE_TAGS?= Key=string,Value=string ...
# NTE_DBINSTANCE_TIMEZONE?=

# Derived parameters
NTE_DBINSTANCE_DBCLUSTER_IDENTIFIER?= $(NTE_DBCLUSTER_IDENTIFIER)
NTE_DBINSTANCE_DBSECURITYGROUP_NAMES?= $(NTE_DBSECURITYGROUP_NAMES)
NTE_DBINSTANCE_DBSUBNETGROUP_NAME?= $(NTE_DBSUBNETGROUP_NAME)
NTE_DBINSTANCE_IDENTIFIERS?= $(NTE_DBINSTANCE_IDENTIFIER)

# Options parameters
__NTE_ALLOCATED_STORAGE= $(if $(NTE_DBINSTANCE_ALLOCATED_STORAGE), --allocated-storage $(NTE_DBINSTANCE_ALLOCATED_STORAGE))
__NTE_AUTO_MINOR_VERSION_UPGRADE= $(if $(filter true, $(NTE_DBINSTANCE_MINOR_UPGRADE)), --auto-minor-version-upgrade, --no-auto-minor-version-upgrade)
__NTE_AVAILABILITY_ZONE= $(if $(NTE_DBINSTANCE_AVAILABILITY_ZONE), --availability-zone $(NTE_DBINSTANCE_AVAILABILITY_ZONE))
__NTE_BACKUP_RETENTION_PERIOD__DBINSTANCE= $(if $(NTE_DBINSTANCE_BACKUP_RETENTION), --backup-retention-period $(NTE_DBINSTANCE_BACKUP_RETENTION))
__NTE_CHARACTER_SET_NAME__DBINSTANCE= $(if $(NTE_DBINSTANCE_CHARACTERSET_NAME), --character-set-name $(NTE_DBINSTANCE_CHARACTERSET_NAME))
__NTE_COPY_TAGS_TO_SNAPSHOT= $(if $(filter true, $(NTE_DBINSTANCE_TAG_SNAPSHOT)), --copy-tags-to-snapshot, --no-copy-tags-to-snapshot)
__NTE_DB_CLUSTER_IDENTIFIER__DBINSTANCE= $(if $(NTE_DBINSTANCE_DBCLUSTER_IDENTIFIER), --db-cluster-identifier $(NTE_DBINSTANCE_DBCLUSTER_IDENTIFIER))
__NTE_DB_INSTANCE_CLASS= $(if $(NTE_DBINSTANCE_CLASS), --db-instance-class $(NTE_DBINSTANCE_CLASS))
__NTE_DB_INSTANCE_IDENTIFIER= $(if $(NTE_DBINSTANCE_IDENTIFIER), --db-instance-identifier $(NTE_DBINSTANCE_IDENTIFIER))
__NTE_DB_NAME__DBINSTANCE= $(if $(NTE_DBINSTANCE_DATABASE_NAME), --db-name $(NTE_DBINSTANCE_DATABASE_NAME))
__NTE_DB_SECURITY_GROUPS= $(if $(NTE_DBINSTANCE_DBSECURITYGROUP_NAMES), --db-security-groups $(NTE_DBINSTANCE_DBSECURITYGROUP_NAMES))
__NTE_DB_SUBNET_GROUP_NAME__DBINSTANCE= $(if $(NTE_DBINSTANCE_DBSUBNETGROUP_NAME), --db-subnet-group-name $(NTE_DBINSTANCE_DBSUBNETGROUP_NAME))
__NTE_DOMAIN=
__NTE_DOMAIN_IAM_ROLE=
__NTE_ENABLE_CLOUDWATCH_LOGS_EXPORT=
__NTE_ENABLE_IAM_DATABASE_AUTHENTICATION=
__NTE_ENABLE_PERFORMANCE_INSIGHTS=
__NTE_ENGINE__DBINSTANCE= $(if $(NTE_DBINSTANCE_DATABASE_ENGINE), --engine $(NTE_DBINSTANCE_DATABASE_ENGINE))
__NTE_ENGINE_VERSION__DBINSTANCE= $(if $(NTE_DBINSTANCE_DATABASE_VERSION), --engine-version $(NTE_DBINSTANCE_DATABASE_VERSION))
__NTE_FINAL_DB_SNAPSHOT_IDENTIFIER= $(if $(NTE_DBINSTANCE_FINALSNAPSHOT_IDENTIFIER), --final-db-snapshot-identifier $(NTE_DBINSTANCE_FINALSNAPSHOT_IDENTIFIER))
__NTE_IOPS= $(if $(NTE_DBINSTANCE_IOPS), --iops $(NTE_DBINSTANCE_IOPS))
__NTE_KMS_KEY_ID__DBINSTANCE= $(if $(NTE_DBINSTANCE_KMSKEY_ID), --kms-key-id $(NTE_DBINSTANCE_KMSKEY_ID))
__NTE_LICENSE_MODEL= $(if $(NTE_DBINSTANCE_LICENCE_MODEL), --license-model $(NTE_DBINSTANCE_LICENSE_MODEL))
__NTE_MASTER_USER_PASSWORD__DBINSTANCE= $(if $(NTE_DBINSTANCE_MASTER_PASSWORD), --master-user-password $(NTE_DBINSTANCE_MASTER_PASSWORD))
__NTE_MASTER_USERNAME__DBINSTANCE= $(if $(NTE_DBINSTANCE_MASTER_USERNAME), --master-username $(NTE_DBINSTANCE_MASTER_USERNAME))
__NTE_MONITORING_INTERVAL= $(if $(NTE_DBINSTANCE_MONITORING_INTERVAL), --monitoring-interval $(NTE_DBINSTANCE_MONITORING_INTERVAL))
__NTE_MONITORING_ROLE_ARN= $(if $(NTE_DBINSTANCE_MONITORING_ROLEARN), --monitoring-role-arn $(NTE_DBINSTANCE_MONITORING_ROLEARN))
__NTE_MULTI_AZ= $(if $(filter true, $(NTE_DBINSTANCE_MULTI_AZ)), --multi-az, --no-multi-az)
__NTE_OPTION_GROUP_NAME=
__NTE_PERFORMANCE_INSIGHTS_KMS_KEY=
__NTE_PORT__DBINSTANCE= $(if $(NTE_DBINSTANCE_DATABASE_PORT), --port $(NTE_DBINSTANCE_DATABASE_PORT))
__NTE_PREFERRED_BACKUP_WINDOW__DBINSTANCE= $(if $(NTE_DBINSTANCE_BACKUP_WINDOW), --preferred-backup-window $(NTE_DBINSTANCE_BACKUP_WINDOW))
__NTE_PREFERRED_MAINTENANCE_WINDOW__DBINSTANCE= $(if $(NTE_DBINSTANCE_MAINTENANCE_WINDOW), --preferred-maintenance-window $(NTE_DBINSTANCE_MAINTENANCE_WINDOW))
__NTE_PROMOTION_TIER= $(if $(NTE_DBINSTANCE_PROMOTION_TIER), --promotion-tier $(NTE_DBINSTANCE_PROMOTION_TIER))
__NTE_PUBLICLY_ACCESSIBLE= $(if $(filter true, $(NTE_DBINSTANCE_PUBLICLY_ACCESSIBLE)), --publicly-accessible, --no-publicly-accessible)
__NTE_SKIP_FINAL_SNAPSHOT__DBINSTANCE= $(if $(filter true, $(NTE_DBINSTANCE_FINALSNAPSHOT_SKIP)), --skip-final-snapshot, --no-skip-final-snapshot)
__NTE_STORAGE_ENCRYPTED__DBINSTANCE= $(if $(filter true, $(NTE_DBINSTANCE_STORAGE_ENCRYPTED)), --storage-encrypted, --no-storage-encrypted)
__NTE_STORAGE_TYPE= $(if $(NTE_DBINSTANCE_STORAGE_TYPE), --storage-type $(NTE_DBINSTANCE_STORAGE_TYPE))
__NTE_TAGS__DBINSTANCE= $(if $(NTE_DBINSTANCE_TAGS), --tags $(NTE_DBINSTANCE_TAGS))
__NTE_TIMEZONE=
__NTE_VPC_SECURITY_GROUP_IDS_DBINSTANCE=

# UI parameters
NTE_UI_VIEW_DBINSTANCES_FIELDS?= .{DBInstanceIdentifier:DBInstanceIdentifier,engine:Engine,engineVersion:EngineVersion,multiAZ:MultiAZ,dbInstanceClass:DBInstanceClass,availabilityZone:AvailabilityZone,dbInstanceStatus:DBInstanceStatus}

#--- Utilities

#--- MACROS
_nte_get_dbinstance_endpoint= $(call _nte_get_dbinstance_endpoint_I, $(NTE_DBINSTANCE_IDENTIFIER))
_nte_get_dbinstance_endpoint_I= $(shell $(AWS) neptune describe-db-instances --filters Name=db-instance-id,Values=$(strip $(1)) --query "DBInstances[0].Endpoint.Address"  --output text)

_nte_get_dbinstance_securitygroup_ids= $(call _nte_get_dbinstance_securitygroup_ids_I, $(NTE_DBINSTANCE_IDENTIFIER))
_nte_get_dbinstance_securitygroup_ids_I= $(shell $(AWS) neptune describe-db-instances --filters Name=db-instance-id,Values=$(strip $(1)) --query "DBInstances[].VpcSecurityGroups[].VpcSecurityGroupId" --output text)

#----------------------------------------------------------------------
# USAGE
#

_nte_view_framework_macros ::
	@echo 'AWS::NepTunE::DbInstance ($(_AWS_NEPTUNE_DBINSTANCE_MK_VERSION)) macros:'
	@echo '    _nte_get_dbinstance_entrypoint_{|I}           - Get the entrypoint of a DB-instance'
	@echo '    _nte_get_dbinstance_securitygroup_ids_{|I}    - Get the security-group IDs of a DB-instance'
	@echo

_nte_view_framework_parameters ::
	@echo 'AWS::NepTunE::DbInstance ($(_AWS_NEPTUNE_DBINSTANCE_MK_VERSION)) parameters:'
	@echo '    NTE_DBINSTANCE_ALLOCATED_STORAGE=$(NTE_DBINSTANCE_ALLOCATED_STORAGE)'
	@echo '    NTE_DBINSTANCE_AVAILABILITY_ZONE=$(NTE_DBINSTANCE_AVAILABILITY_ZONE)'
	@echo '    NTE_DBINSTANCE_BACKUP_RETENTION=$(NTE_DBINSTANCE_BACKUP_RETENTION)'
	@echo '    NTE_DBINSTANCE_BACKUP_WINDOW=$(NTE_DBINSTANCE_BACKUP_WINDOW)'
	@echo '    NTE_DBINSTANCE_CLASS=$(NTE_DBINSTANCE_CLASS)'
	@echo '    NTE_DBINSTANCE_DATABASE_ENGINE=$(NTE_DBINSTANCE_DATABASE_ENGINE)'
	@echo '    NTE_DBINSTANCE_DATABASE_NAME=$(NTE_DBINSTANCE_DATABASE_NAME)'
	@echo '    NTE_DBINSTANCE_DATABASE_PORT=$(NTE_DBINSTANCE_DATABASE_PORT)'
	@echo '    NTE_DBINSTANCE_DATABASE_VERSION=$(NTE_DBINSTANCE_DATABASE_VERSION)'
	@echo '    NTE_DBINSTANCE_DBSECURITYGROUP_NAMES=$(NTE_DBINSTANCE_DBSECURITYGROUP_NAMES)'
	@echo '    NTE_DBINSTANCE_DBSUBNETGROUP_NAME?=$(NTE_DBINSTANCE_DBSUBNETGROUP_NAME)'
	@echo '    NTE_DBINSTANCE_ENDPOINT=$(NTE_DBINSTANCE_ENDPOINT)'
	@echo '    NTE_DBINSTANCE_FINALSNAPSHOT_IDENTIFIER=$(NTE_DBINSTANCE_FINALSNAPSHOT_IDENTIFIER)'
	@echo '    NTE_DBINSTANCE_FINALSNAPSHOT_SKIP=$(NTE_DBINSTANCE_FINALSNAPSHOT_SKIP)'
	@echo '    NTE_DBINSTANCE_IDENTIFIER=$(NTE_DBINSTANCE_IDENTIFIER)'
	@echo '    NTE_DBINSTANCE_IDENTIFIERS=$(NTE_DBINSTANCE_IDENTIFIERS)'
	@echo '    NTE_DBINSTANCE_IOPS=$(NTE_DBINSTANCE_IOPS)'
	@echo '    NTE_DBINSTANCE_KMSKEY_ID=$(NTE_DBINSTANCE_KMSKEY_ID)'
	@echo '    NTE_DBINSTANCE_LICENSE_MODEL=$(NTE_DBINSTANCE_LICENSE_MODEL)'
	@echo '    NTE_DBINSTANCE_MAINTENANCE_WINDOW?=$(NTE_DBINSTANCE_MAINTENANCE_WINDOW)'
	@echo '    NTE_DBINSTANCE_MASTER_USERNAME?=$(NTE_DBINSTANCE_MASTER_USERNAME)'
	@echo '    NTE_DBINSTANCE_MASTER_PASSWORD?=$(NTE_DBINSTANCE_MASTER_PASSWORD)'
	@echo '    NTE_DBINSTANCE_MINOR_UPGRADE?=$(NTE_DBINSTANCE_MINOR_UPGRADE)'
	@echo '    NTE_DBINSTANCE_MONITORING_INTERVAL?=$(NTE_DBINSTANCE_MONITORING_INTERVAL)'
	@echo '    NTE_DBINSTANCE_MONITORING_ROLEARN?=$(NTE_DBINSTANCE_MONITORING_ROLEARN)'
	@echo '    NTE_DBINSTANCE_MULTI_AZ?=$(NTE_DBINSTANCE_MULTI_AZ)'
	@echo '    NTE_DBINSTANCE_PUBLICLY_ACCESSIBLE?=$(NTE_DBINSTANCE_PUBLICLY_ACCESSIBLE)'
	@echo '    NTE_DBINSTANCE_SECURITYGROUP_IDS?=$(NTE_DBINSTANCE_SECURITYGROUP_IDS)'
	@echo '    NTE_DBINSTANCE_STORAGE_ENCRYPTED?=$(NTE_DBINSTANCE_STORAGE_ENCRYPTED)'
	@echo '    NTE_DBINSTANCE_STORAGE_TYPE?=$(NTE_DBINSTANCE_STORAGE_TYPE)'
	@echo '    NTE_DBINSTANCE_TAG_SNAPSHOT?=$(NTE_DBINSTANCE_TAG_SNAPSHOT)'
	@echo '    NTE_DBINSTANCE_TAGS?=$(NTE_DBINSTANCE_TAGS)'
	@echo '    NTE_DBINSTANCE_TIMEZONE?=$(NTE_DBINSTANCE_TIMEZONE)'
	@echo

_nte_view_framework_targets ::
	@echo 'AWS::NepTunE::DbInstance ($(_AWS_NEPTUNE_DBINSTANCE_MK_VERSION)) targets:'
	@echo '    _nte_create_dbinstance                        - Create a db-instance'
	@echo '    _nte_delete_dbinstance                        - Delete a db-instance'
	@echo '    _nte_show_dbinstance                          - Show db-instance'
	@echo '    _nte_view_dbinstances                         - View db-instances'
	@echo '    _nte_view_dbinstances_set                     - View a set of db-instances'
	@echo

#----------------------------------------------------------------------
# PRIVATE TARGETS
#

#----------------------------------------------------------------------
# PUBLIC TARGETS
#


_nte_create_dbinstance:
	@$(INFO) '$(AWS_UI_LABEL)Creating DB instance "$(NTE_DBINSTANCE_IDENTIFIER)"...'; $(NORMAL)
	$(AWS) neptune create-db-instance $(__NTE_ALLOCATED_STORAGE) $(__NTE_AUTO_MINOR_VERSION_UPGRADE) $(__NTE_AVAILABILITY_ZONE) $(__NTE_BACKUP_RETENTION_PERIOD__DBINSTANCE) $(__NTE_CHARACTER_SET_NAME__DBINSTANCE) $(__NTE_COPY_TAGS_TO_SNAPSHOT) $(__NTE_DB_CLUSTER_IDENTIFIER__DBINSTANCE) $(__NTE_DB_INSTANCE_CLASS) $(__NTE_DB_INSTANCE_IDENTIFIER) $(__NTE_DB_NAME__DBINSTANCE) $(__NTE_DB_SECURITY_GROUPS) $(__NTE_DB_SUBNET_GROUP_NAME__DBINSTANCE) $(__NTE_DOMAIN) $(__NTE_DOMAIN_IAM_ROLE_NAME) $(__NTE_ENABLE_CLOUDWATCH_LOGS_EXPORT) $(__NTE_ENABLE_IAM_DATABASE_AUTHENTICATION) $(__NTE_ENABLE_PERFORMANCE_INSIGHTS) $(__NTE_ENGINE__DBINSTANCE) $(__NTE_ENGINE_VERSION__DBINSTANCE) $(__NTE_IOPS) $(__NTE_KMS_KEY_ID__DBINSTANCE) $(__NTE_LICENSE_MODEL) $(__NTE_MASTER_USER_PASSWORD__DBINSTANCE) $(__NTE_MASTER_USERNAME__DBINSTANCE) $(__NTE_MONITORING_INTERVAL) $(__NTE_MONITORING_ROLE_ARN) $(__NTE_MULTI_AZ) $(__NTE_OPTION_GROUP_NAME) $(__NTE_PERFORMANCE_INSIGHTS_KMS_KEY_ID) $(__NTE_PORT__DBINSTANCE) $(__NTE_PREFERRED_BACKUP_WINDOW__DBINSTANCE) $(__NTE_PREFERRED_MAINTENANCE_WINDOW__DBINSTANCE) $(__NTE_PROMOTION_TIER) $(__NTE_PUBLICLY_ACCESSIBLE) $(__NTE_STORAGE_ENCRYPTED__DBINSTANCE) $(__NTE_STORAGE_TYPE) $(__NTE_TAGS__DBINSTANCE) $(__NTE_TIMEZONE) $(__NTE_VPC_SECURITY_GROUP_IDS__DBINSTANCE)

_nte_delete_dbinstance:
	@$(INFO) '$(AWS_UI_LABEL)Deleting DB instance "$(NTE_DBINSTANCE_IDENTIFIER)"...'; $(NORMAL)
	$(AWS) neptune delete-db-instance $(__NTE_DB_INSTANCE_IDENTIFIER) $(__NTE_FINAL_DB_SNAPSHOT_IDENTIFIER_INSTANCE) $(__NTE_SKIP_FINAL_SNAPSHOT_INSTANCE)

_nte_show_dbinstance: _nte_show_dbinstance_securitygroups _nte_show_dbinstance_overview

_nte_show_dbinstance_overview:
	@$(INFO) '$(AWS_UI_LABEL)Showing overview of DB instance "$(NTE_DBINSTANCE_IDENTIFIER)" ...'; $(NORMAL)
	$(AWS) neptune describe-db-instances --filters Name=db-instance-id,Values=$(NTE_DBINSTANCE_IDENTIFIER) --query "DBInstances[]"

_nte_show_dbinstance_securitygroups:
	@$(INFO) '$(AWS_UI_LABEL)Showing security-groups of DB instance "$(NTE_DBINSTANCE_IDENTIFIER)" ...'; $(NORMAL)
	$(AWS)  neptune describe-db-instances --filters Name=db-instance-id,Values=$(NTE_DBINSTANCE_IDENTIFIER) --query "DBInstances[].VpcSecurityGroups[]" 

_nte_view_dbinstances:
	@$(INFO) '$(AWS_UI_LABEL)Viewing DB instances ...'; $(NORMAL)
	$(AWS) neptune describe-db-instances $(_X__FILTER) --query "DBInstances[]$(NTE_UI_VIEW_DBINSTANCES_FIELDS)"

_nte_view_dbinstances_set:
