_OPENSSL_CERTIFICATE_MK_VERSION= $(_OPENSSL_MK_VERSION)

# OSL_CERTIFICATE_CACHAIN_FILEPATH?= ./in/ca_chain.pem
# OSL_CERTIFICATE_CAKEY_DIRPATH?= ./in/
# OSL_CERTIFICATE_CAKEY_FILENAME?= ca_key.pem
# OSL_CERTIFICATE_CAKEY_FILEPATH?= ./in/ca_key.pem
# OSL_CERTIFICATE_CERTIFICATESIGNINGREQUEST_FILEPATH?= ./in/file.csr
# OSL_CERTIFICATE_DIRPATH?= ./out/
# OSL_CERTIFICATE_EXTENIONS_NAME?= v3_ca
# OSL_CERTIFICATE_FILENAME?= certificate.crt
# OSL_CERTIFICATE_FILEPATH?= ./out/certificate.crt
OSL_CERTIFICATE_FORMAT?= PEM
# OSL_CERTIFICATE_MODULUS?=
# OSL_CERTIFICATE_PRIVATEKEY_FILEPATH?=
# OSL_CERTIFICATE_PUBLICKEY_FILEPATH?=
# OSL_CERTIFICATE_ROOTCERFICATE_FILEPATH?= ./in/ca.root.crt
# OSL_CERTIFICATE_ROOTPRIVATEKEY_FILEPATH?= ./in/root.pem
# OSL_CERTIFICATE_SERIAL?= 0xbfbc015b6bb7912e
OSL_CERTIFICATE_TTL_DAYS?= 30
# OSL_PASSPHRASE_SOURCE?=
# OSL_REMOTE_HOST?=www.example.com
# OSL_REMOTE_PORT?=8443
# OSL_CERTIFICATES_DIRPATH?=
OSL_CERTIFICATES_REGEX?= *.crt
# OSL_CERTIFICATES_SET_NAME?=

# Derived parameters
OSL_CERTIFICATE_CACHAIN_FILEPATH?= $(OSL_CERTIFICATE_ROOTCERTIFICATE_FILEPATH)
OSL_CERTIFICATE_CAKEY_DIRPATH?= $(OSL_INPUTS_DIRPATH)
OSL_CERTIFICATE_CAKEY_FILEPATH?= $(OSL_CERTIFICATE_CAKEY_DIRPATH)$(OSL_CERTIFICATE_CAKEY_FILENAME)
OSL_CERTIFICATE_CERTIFICATESIGNINGREQUEST_FILEPATH?= $(OSL_CERTIFICATESIGNINGREQUEST_FILEPATH)
# OSL_CERTIFICATE_DIRPATH?= $(OSL_OUTPUTS_DIRPATH)# Assumes it is generated by a CSR
OSL_CERTIFICATE_FILEPATH?= $(if $(OSL_CERTIFICATE_FILENAME),$(OSL_CERTIFICATE_DIRPATH)$(OSL_CERTIFICATE_FILENAME))
OSL_CERTIFICATE_NAME?= $(patsubst %.crt,%,$(OSL_CERTIFICATE_FILENAME))
OSL_CERTIFICATE_PRIVATEKEY_FILEPATH?= $(OSL_PRIVATEKEY_FILEPATH)
OSL_CERTIFICATE_PRIVATEKEY_FORMAT?= $(OSL_PRIVATEKEY_FORMAT)
OSL_CERTIFICATE_ROOTCERTIFICATE_FILEPATH?= $(OSL_ROOTCERTIFICATE_FILEPATH)
OSL_CERTIFICATE_ROOTCERTIFICATEPRIVATEKEY_FILEPATH?= $(OSL_ROOTCERTIFICATE_PRIVATEKEY_FILEPATH)
OSL_CERTIFICATES_DIRPATH?= $(OSL_CERTIFICATE_DIRPATH)
OSL_CERTIFICATES_SET_NAME?= certificates@$(OSL_CERTIFICATES_REGEX)

# Option parameters
__OSL_BATCH=
__OSL_CA__CERTIFICATE= $(if $(OSL_CERTIFICATE_ROOTCERTIFICATE_FILEPATH),-CA $(OSL_CERTIFICATE_ROOTCERTIFICATE_FILEPATH))
__OSL_CAFILE__CERTIFICATE= $(if $(OSL_CERTIFICATE_CACHAIN_FILEPATH),-CAfile $(OSL_CERTIFICATE_CACHAIN_FILEPATH))
__OSL_CAKEY__CERTIFICATE= $(if $(OSL_CERTIFICATE_ROOTCERTIFICATEPRIVATEKEY_FILEPATH),-CAkey $(OSL_CERTIFICATE_ROOTCERTIFICATEPRIVATEKEY_FILEPATH))
__OSL_CERT__CERTIFICATE= $(if $(OSL_CERTIFICATE_ROOTCERTIFICATE_FILEPATH),-cert $(OSL_CERTIFICATE_ROOTCERTIFICATE_FILEPATH))
# __OSL_CONNECT= $(if $(OSL_CONNECT_HOSTPORT), -connect $(OSL_CONNECT_HOSTPORT))
__OSL_CREATE_SERIAL= $(if $(OSL_CERTIFICATE_SERIAL),,-create_serial)
__OSL_DAYS__CERTIFICATE= $(if $(OSL_CERTIFICATE_TTL_DAYS),-days $(OSL_CERTIFICATE_TTL_DAYS))
__OSL_EXTENSIONS__CERTIFICATE= $(if $(OSL_CERTIFICATE_EXTENSIONS_NAME),-extensions $(OSL_CERTIFICATE_EXTENSIONS_NAME))
__OSL_IN__CERTIFICATE= $(if $(OSL_CERTIFICATE_FILEPATH),-in $(OSL_CERTIFICATE_FILEPATH))
__OSL_INFORM__CERTIFICATE= $(if $(OSL_CERTIFICATE_FORMAT),-inform $(OSL_CERTIFICATE_FORMAT))
__OSL_KEY__CERTIFICATE= $(if $(OSL_CERTIFICATE_PRIVATEKEY_FILEPATH),-key $(OSL_CERTIFICATE_PRIVATEKEY_FILEPATH))
__OSL_KEYFORM__CERTIFICATE= $(if $(OSL_CERTIFICATE_PRIVATEKEY_FORMAT),-keyform $(OSL_CERTIFICATE_PRIVATEKEY_FORMAT))
__OSL_KEYFILE__CERTIFICATE= $(if $(OSL_CERTIFICATE_ROOTCERTIFICATEPRIVATEKEY_FILEPATH),-keyfile $(OSL_CERTIFICATE_ROOTCERTIFICATEPRIVATEKEY_FILEPATH))
__OSL_OUT__CERTIFICATE= $(if $(OSL_CERTIFICATE_FILEPATH),-out $(OSL_CERTIFICATE_FILEPATH))
__OSL_OUTFORM__CERTIFICATE= $(if $(OSL_CERTIFICATE_FORMAT),-outform $(OSL_CERTIFICATE_FORMAT))
__OSL_RAND=
# __OSL_SERVERNAME= $(if $(OSL_REMOTE_HOST), -servername $(OSL_REMOTE_HOST))
__OSL_SET_SERIAL= $(if $(OSL_CERTIFICATE_SERIAL),-set_serial $(OSL_CERTIFCATE_SERIAL))

# Pipe parameters
_OSL_CREATE_CERTIFICATE_|?= touch ~/.rnd &&# 
|_OSL_SHOW_CERTIFICATE_CONFIG?= | head -5; echo '...'
|_OSL_SHOW_CERTIFICATE_ENDCODEDCONTENT?= | head -5; echo '...'
|_OSL_SHOW_CERTIFICATE_MODULUS?= | sed 's/^Modulus=//'
|_OSL_SHOW_CERTIFICATE_PUBLICKEY?= # | tee $(OSL_CERTIFICATE_PUBLICKEY_FILEPATH)

#--- MACROS

_osl_get_certificate_modulus= $(call _osl_get_certificate_modulus_F, $(OSL_CERTIFICATE_FILEPATH))
_osl_get_certificate_modulus_F= $(shell openssl x509 -in $(1) -modulus -noout | sed 's/^Modulus=//')

_osl_get_certificate_publickey= $(call _osl_get_certificate_publickey_F, $(OSL_CERTIFICATE_FILEPATH))
_osl_get_certificate_publickey_F= $(shell openssl x509 -in $(1) -pubkey -noout )
#----------------------------------------------------------------------
# INTERFACE
#

_osl_view_framework_macros ::
	@echo 'OpenSSL::Certificate ($(_OPENSSL_CERTIFICATE_MK_VERSION)) macros:'
	@echo '    _osl_get_certificate_modulus_{|F}               - Get modulus of certificate'
	@echo '    _osl_get_certificate_publickey_{|F}             - Get public-key of certificate'
	@echo

_osl_view_framework_parameters ::
	@echo 'OpenSSL::Certificate ($(_OPENSSL_CERTIFICATE_MK_VERSION)) parameters:'
	@echo '    OSL_CERTIFICATE_CACHAIN_FILEPATH=$(OSL_CERTIFICATE_CACHAIN_FILEPATH)'
	@echo '    OSL_CERTIFICATE_CAKEY_DIRPATH=$(OSL_CERTIFICATE_CAKEY_DIRPATH)'
	@echo '    OSL_CERTIFICATE_CAKEY_FILENAME=$(OSL_CERTIFICATE_CAKEY_FILENAME)'
	@echo '    OSL_CERTIFICATE_CAKEY_FILEPATH=$(OSL_CERTIFICATE_CAKEY_FILEPATH)'
	@echo '    OSL_CERTIFICATE_CERTIFICATESIGNINGREQUEST_FILEPATH=$(OSL_CERTIFICATE_CERTIFICATESIGNINGREQUEST_FILEPATH)'
	@echo '    OSL_CERTIFICATE_CONFIG_DIRPATH=$(OSL_CERTIFICATE_CONFIG_DIRPATH)'
	@echo '    OSL_CERTIFICATE_CONFIG_FILENAME=$(OSL_CERTIFICATE_CONFIG_FILENAME)'
	@echo '    OSL_CERTIFICATE_CONFIG_FILEPATH=$(OSL_CERTIFICATE_CONFIG_FILEPATH)'
	@echo '    OSL_CERTIFICATE_DIRPATH=$(OSL_CERTIFICATE_DIRPATH)'
	@echo '    OSL_CERTIFICATE_FILENAME=$(OSL_CERTIFICATE_FILENAME)'
	@echo '    OSL_CERTIFICATE_FILEPATH=$(OSL_CERTIFICATE_FILEPATH)'
	@echo '    OSL_CERTIFICATE_FORMAT=$(OSL_CERTIFICATE_FORMAT)'
	@echo '    OSL_CERTIFICATE_MODULUS=$(OSL_CERTIFICATE_MODULUS)'
	@echo '    OSL_CERTIFICATE_PRIVATEKEY_FILEPATH=$(OSL_CERTIFICATE_PRIVATEKEY_FILEPATH)'
	@echo '    OSL_CERTIFICATE_PRIVATEKEY_FORMAT=$(OSL_CERTIFICATE_PRIVATEKEY_FORMAT)'
	@echo '    OSL_CERTIFICATE_PUBLICKEY_FILEPATH=$(OSL_CERTIFICATE_PUBLICKEY_FILEPATH)'
	@echo '    OSL_CERTIFICATE_ROOTCERTIFICATE_FILEPATH=$(OSL_CERTIFICATE_ROOTCERTIFICATE_FILEPATH)'
	@echo '    OSL_CERTIFICATE_ROOTCERTIFICATEPRIVATEKEY_FILEPATH=$(OSL_CERTIFICATE_ROOTCERTIFICATEPRIVATEKEY_FILEPATH)'
	@echo '    OSL_CERTIFICATE_SERIAL=$(OSL_CERTIFICATE_SERIAL)'
	@echo '    OSL_CERTIFICATE_TTL_DAYS=$(OSL_CERTIFICATE_TTL_DAYS)'
	@#echo '    OSL_REMOTE_HOST=$(OSL_REMOTE_HOST)'
	@#echo '    OSL_REMOTE_PORT=$(OSL_REMOTE_PORT)'
	@echo '    OSL_CERTIFICATES_DIRPATH=$(OSL_CERTIFICATES_DIRPATH)'
	@echo '    OSL_CERTIFICATES_REGEX=$(OSL_CERTIFICATES_REGEX)'
	@echo '    OSL_CERTIFICATES_SET_NAME=$(OSL_CERTIFICATES_SET_NAME)'
	@echo

_osl_view_framework_targets ::
	@echo 'OpenSSL::Certificate ($(_OPENSSL_CERTIFICATE_MK_VERSION)) targets:'
	@echo '    _osl_check_certificate                   - Check everything about a certificate'
	@echo '    _osl_check_certificate_modulus           - Check the modulus of a certificate'
	@echo '    _osl_create_certificate                  - Create a certificate'
	@echo '    _osl_delete_certificate                  - Delete a certificate'
	@echo '    _osl_selfsign_certificate                - Self-sign a certificate'
	@echo '    _osl_show_certificate                    - Show everything related to a certificate'
	@echo '    _osl_show_certificate_content            - Show content of a certificate'
	@echo '    _osl_show_certificate_decodedcontent     - Show decoded-content of a certificate'
	@echo '    _osl_show_certificate_description        - Show description of a certificate'
	@echo '    _osl_show_certificate_encodedcontent     - Show encoded-content of a certificate'
	@echo '    _osl_show_certificate_modulus            - Show modulus of a certificate'
	@echo '    _osl_show_certificate_publickey          - Show public-key embedded in a certificate'
	@echo '    _osl_view_certificates                   - View certificates'
	@echo '    _osl_view_certificates_set               - View a set of certificates'
	@echo

#----------------------------------------------------------------------
# PRIVATE TARGETS 
#

_OSL_CREATE_CERTIFICATE?= __osl_create_certificate_x509

__osl_create_certificate_ca:
	@$(INFO) '$(OSL_UI_LABEL)Creating certificate "$(OSL_CERTIFICATE_NAME)" ...'; $(NORMAL)
	# $(OPENSSL) ca -in $(OSL_CERTIFICATE_CERTIFICATESIGNINGREQUEST_FILEPATH) $(__OSL_CERT__CERTIFICATE) $(__OSL_CONFIG__CERTIFICATE) $(__OSL_CREATE_SERIAL) $(__OSL_DAYS__CERTIFICATE) $(__OSL_EXTENSIONS__CERTIFICATE) $(__OSL_KEYFILE__CERTIFICATE) $(__OSL_OUT__CERTIFICATE) $(__OSL_SET_SERIAL)  # <--- THIS COMMAND LOOKS FOR THE DEMOCA/ directory as setup in openssl.cnf !!!

__osl_create_certificate_x509:
	@$(INFO) '$(OSL_UI_LABEL)Creating certificate "$(OSL_CERTIFICATE_NAME)" ...'; $(NORMAL)
	@$(WARN) 'This operation creates a certificate by signing its CSR with a certificate authority (CA)'; $(NORMAL)
	$(OPENSSL) x509 -req -in $(OSL_CERTIFICATE_CERTIFICATESIGNINGREQUEST_FILEPATH) $(__OSL_CA__CERTIFICATE) -CAcreateserial $(__OSL_CAKEY__CERTIFICATE) $(__OSL_DAYS__CERTIFICATE) $(__OSL_OUT__CERTIFICATE) -sha256

#----------------------------------------------------------------------
# PUBLIC TARGETS 
#

_osl_check_certificate: _osl_check_certificate_cachain _osl_check_certificate_modulus

_osl_check_certificate_cachain:
	@$(INFO) '$(OSL_UI_LABEL)Checking CA-chain of certificate "$(OSL_CERTIFICATE_NAME)" ...'; $(NORMAL)
	@$(WARN) 'This operation checks whether the provided certificate-authority trust-chain can validate the certificate'; $(NORMAL)
	$(OPENSSL) verify $(__OSL_CAFILE__CERTIFICATE) $(OSL_CERTIFICATE_FILEPATH)

_osl_check_certificate_modulus: _osl_show_privatekey_modulus _osl_show_certificatesigningrequest_modulus _osl_show_certificate_modulus

_osl_create_certificate: $(_OSL_CREATE_CERTIFICATE)

_osl_selfsign_certificate:
	@$(INFO) '$(OSL_UI_LABEL)Self-signing certificate "$(OSL_CERTIFICATE_NAME)" ...'; $(NORMAL)
	$(OPENSSL) req -x509 -in $(OSL_CERTIFICATE_CERTIFICATESIGNINGREQUEST_FILEPATH) $(_X__OSL_CA__CERTIFICATE) $(_X__OSL_CAKEY__CERTIFICATE) $(__OSL_DAYS__CERTIFICATE) $(__OSL_KEY__CERTIFICATE) $(__OSL_KEYFORM__CERTIFICATE) $(__OSL_OUT__CERTIFICATE) $(__OSL_OUTFORM__CERTIFICATE)

_osl_show_certificate :: _osl_show_certificate_content _osl_show_certificate_modulus _osl_show_certificate_publickey _osl_show_certificate_description

_osl_show_certificate_chainoftrust:
	@$(INFO) '$(OSL_UI_LABEL)Showing chain-of-trust of certificate "$(OSL_CERTIFICATE_NAME)" ...'; $(NORMAL)

_osl_show_certificate_content: _osl_show_certificate_decodedcontent _osl_show_certificate_encodedcontent

_osl_show_certificate_decodedcontent:
	@$(INFO) '$(OSL_UI_LABEL)Showing decoded-content of certificate "$(OSL_CERTIFICATE_NAME)" ...'; $(NORMAL)
	$(OPENSSL) x509 $(__OSL_IN__CERTIFICATE) -noout -text

_osl_show_certificate_description:
	@$(INFO) '$(OSL_UI_LABEL)Showing description of certificate "$(OSL_CERTIFICATE_NAME)" ...'; $(NORMAL)
	ls -la $(OSL_CERTIFICATE_FILEPATH)

_osl_show_certificate_encodedcontent:
	@$(INFO) '$(OSL_UI_LABEL)Showing encoded-content of certificate "$(OSL_CERTIFICATE_NAME)" ...'; $(NORMAL)
	@$(WARN) 'This operation returns a BEGIN-CERTIFICATE file'; $(NORMAL)
	cat $(OSL_CERTIFICATE_FILEPATH) $(|_OSL_SHOW_CERTIFICATE_ENDCODEDCONTENT)

_osl_show_certificate_modulus:
	@$(INFO) '$(OSL_UI_LABEL)Showing modulus of certificate "$(OSL_CERTIFICATE_NAME)" ...'; $(NORMAL)
	@$(WARN) 'This operation returns the modulus of the embedded public-key'; $(NORMAL)
	$(OPENSSL) x509 $(__OSL_IN__CERTIFICATE) -modulus -noout $(|_OSL_SHOW_CERTIFICATE_MODULUS)

_osl_show_certificate_publickey:
	@$(INFO) '$(OSL_UI_LABEL)Showing public-key of certificate "$(OSL_CERTIFICATE_NAME)" ...'; $(NORMAL)
	$(OPENSSL) x509 $(__OSL_IN__CERTIFICATE) $(__OSL_INFORM__CERTIFICATE) -pubkey -noout $(|_OSL_SHOW_CERTIFICATE_PUBLICKEY)

_osl_view_certificates:
	@$(INFO) '$(OSL_UI_LABEL)View certificates ...'; $(NORMAL)
	ls -al $(OSL_CERTIFICATES_DIRPATH)*.crt

_osl_view_certificates_set:
	@$(INFO) '$(OSL_UI_LABEL)View certificates-set "$(OSL_CERTIFICATES_SET_NAME)" ...'; $(NORMAL)
	@$(WARN) 'Certificates are grouped based on the provided directory and regex'; $(NORMAL)
	ls -al $(OSL_CERTIFICATES_DIRPATH)$(OSL_CERTIFICATES_REGEX)
